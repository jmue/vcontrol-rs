language: rust

cache:
  cargo: true
  directories:
    - $HOME/docker

matrix:
  include:
    - os: linux
      rust: stable
      env: DEPLOY=true
    - os: linux
      rust: nightly
    - os: linux
      rust: stable
      services: docker
      env: TARGET=arm-unknown-linux-gnueabihf
    - os: linux
      rust: stable
      services: docker
      env: TARGET=armv7-unknown-linux-gnueabihf
    - os: linux
      rust: stable
      services: docker
      env: TARGET=armv7-unknown-linux-musleabihf
    - os: linux
      rust: stable
      services: docker
      env: TARGET=aarch64-unknown-linux-gnu
    - os: osx
      rust: stable
    - os: osx
      rust: nightly
  allow_failures:
    - rust: beta
    - rust: nightly

install: |
  set -eo pipefail

  if [ -n "${TARGET:-}" ]; then
    cargo install --force cross
    rm -f ~/.cargo/bin/cargo-clippy
  fi

  if [ "$TRAVIS_RUST_VERSION" != nightly ]; then
    rustup component add clippy
  fi

script: |
  set -eo pipefail

  if [ -n "${TARGET:-}" ]; then
    cross test --all --all-features --target "${TARGET}"
    cross test --all --all-features --target "${TARGET}" --release

    if [ "${TRAVIS_RUST_VERSION}" != nightly ]; then
      cross clippy --target "${TARGET}"
    fi
  else
    cargo test --all --all-features
    cargo test --all --all-features --release

    if [ "${TRAVIS_RUST_VERSION}" != nightly ]; then
      cargo clippy
    fi
  fi

deploy:
  provider: script
  script:
    - cargo publish --token "${CRATES_IO_TOKEN}"
  on:
    tags: true
    branch: master
    condition: $DEPLOY = true

notifications:
  email:
    on_success: never
